{"version":3,"sources":["context/ContextProvider.tsx","components/Settings.tsx","components/VideoFeed.tsx","App.tsx","index.tsx"],"names":["defaults","brightnessState","brightness","setBrightness","contrastState","contrast","setContrast","nightVisionState","nightVision","setNightVision","AppContext","createContext","useAppContext","useContext","ContextProvider","children","useState","contextState","Provider","value","Settings","Container","fluid","className","Row","Col","xs","Slider","label","min","max","step","onChange","showValue","originFromZero","Toggle","onText","offText","_","toggled","checked","PrimaryButton","text","onClick","VideoFeed","videoFeed","useRef","fullscreen","videoFilter","setVideoFilter","useEffect","ref","id","style","filter","src","onDoubleClick","current","document","exitFullscreen","then","requestFullscreen","navigationUI","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26be7604.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useContext, createContext, useState } from \"react\";\r\n\r\ntype BrightnessState = {\r\n    brightness: number;\r\n    setBrightness: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\ntype ContrastState = {\r\n    contrast: number;\r\n    setContrast: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\ntype NightVisionState = {\r\n    nightVision: boolean;\r\n    setNightVision: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\ntype Context = {\r\n    brightnessState: BrightnessState;\r\n    contrastState: ContrastState;\r\n    nightVisionState: NightVisionState;\r\n};\r\n\r\nconst defaults = {\r\n    brightnessState: {\r\n        brightness: 0,\r\n        setBrightness: (): number => 0,\r\n    },\r\n    contrastState: {\r\n        contrast: 0,\r\n        setContrast: (): number => 0,\r\n    },\r\n    nightVisionState: {\r\n        nightVision: false,\r\n        setNightVision: (): boolean => false,\r\n    },\r\n};\r\n\r\nconst AppContext = createContext<Context>(defaults);\r\n\r\nexport function useAppContext(): Context {\r\n    return useContext(AppContext);\r\n}\r\n\r\n//* Component\r\nexport const ContextProvider = ({\r\n    children,\r\n}: {\r\n    children: React.ReactNode;\r\n}): JSX.Element => {\r\n    const [brightness, setBrightness] = useState(0);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [nightVision, setNightVision] = useState(false);\r\n\r\n    const contextState: Context = {\r\n        brightnessState: {\r\n            brightness: brightness,\r\n            setBrightness: setBrightness,\r\n        },\r\n        contrastState: {\r\n            contrast: contrast,\r\n            setContrast: setContrast,\r\n        },\r\n        nightVisionState: {\r\n            nightVision: nightVision,\r\n            setNightVision: setNightVision,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={contextState}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { PrimaryButton, Slider, Toggle } from \"@fluentui/react\";\r\nimport { useAppContext } from \"../context/ContextProvider\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst Settings = (): JSX.Element => {\r\n    const {\r\n        brightnessState: { brightness, setBrightness },\r\n        contrastState: { contrast, setContrast },\r\n        nightVisionState: { nightVision, setNightVision },\r\n    } = useAppContext();\r\n\r\n    const onBrightnessChange = (value: number) => setBrightness(value);\r\n    const onContrastChange = (value: number) => setContrast(value);\r\n    const onToggleNightVision = (_: any, toggled?: boolean) =>\r\n        setNightVision(toggled ?? false);\r\n\r\n    const resetFilter = () => {\r\n        setBrightness(0);\r\n        setContrast(0);\r\n        setNightVision(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid=\"sm\" className=\"mt-3 mb-5\">\r\n            <Row className=\"align-items-center justify-content-center\">\r\n                <Col xs={8}>\r\n                    <Slider\r\n                        label=\"Brightness\"\r\n                        min={-100}\r\n                        max={100}\r\n                        step={10}\r\n                        value={brightness}\r\n                        onChange={onBrightnessChange}\r\n                        showValue\r\n                        originFromZero\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={3}>\r\n                    <Toggle\r\n                        label=\"Nightvision\"\r\n                        onText=\"On\"\r\n                        offText=\"Off\"\r\n                        onChange={onToggleNightVision}\r\n                        checked={nightVision}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={8}>\r\n                    <Slider\r\n                        label=\"Contrast\"\r\n                        min={-100}\r\n                        max={100}\r\n                        step={10}\r\n                        value={contrast}\r\n                        onChange={onContrastChange}\r\n                        showValue\r\n                        originFromZero\r\n                    />\r\n                </Col>\r\n                <Col xs={3}>\r\n                    <PrimaryButton text=\"Reset\" onClick={resetFilter} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAppContext } from \"../context/ContextProvider\";\r\n\r\nimport \"./VideoFeed.scss\";\r\n\r\nconst VideoFeed = (): JSX.Element => {\r\n    const {\r\n        brightnessState: { brightness },\r\n        contrastState: { contrast },\r\n        nightVisionState: { nightVision },\r\n    } = useAppContext();\r\n\r\n    const videoFeed = useRef<HTMLDivElement>(null);\r\n    const fullscreen = useRef(false);\r\n\r\n    const [videoFilter, setVideoFilter] = useState(\r\n        `brightness(${brightness + 100}%) \r\n        contrast(${contrast + 100}%)\r\n        hue-rotate(${nightVision ? \"90deg\" : \"0\"})\r\n        saturate(${nightVision ? \"10\" : \"1\"})`\r\n    );\r\n\r\n    useEffect(() => {\r\n        setVideoFilter(\r\n            `brightness(${brightness + 100}%) \r\n            contrast(${contrast + 100}%) \r\n            hue-rotate(${nightVision ? \"90deg\" : \"0\"}) \r\n            saturate(${nightVision ? \"10\" : \"1\"})`\r\n        );\r\n    }, [brightness, contrast, nightVision]);\r\n\r\n    const toggleFullscreen = () => {\r\n        if (!fullscreen.current)\r\n            videoFeed.current\r\n                ?.requestFullscreen({ navigationUI: \"hide\" })\r\n                .then(() => (fullscreen.current = true));\r\n        else document.exitFullscreen().then(() => (fullscreen.current = false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div ref={videoFeed}>\r\n                <img\r\n                    id=\"videoFeed\"\r\n                    style={{ filter: videoFilter }}\r\n                    src=\"http://localhost:8000/video_feed\"\r\n                    onDoubleClick={toggleFullscreen}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VideoFeed;\r\n","import React from \"react\";\nimport Settings from \"./components/Settings\";\nimport VideoFeed from \"./components/VideoFeed\";\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\"></header>\n            <VideoFeed />\n            <Settings />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ContextProvider } from \"./context/ContextProvider\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ContextProvider>\n            <App />\n        </ContextProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}